// XMLHttpRequest

function reqListener() {
    console.log(this.responseText);
}

let req = new XMLHttpRequest();
req.onload = reqListener;
//req.open('get', 'data.txt', true);
//req.open('get', 'data.json', true);
//req.open('get', "https://api.blablagues.net/?rub=blagues", true)
//req.send()


// --------
// FETCH 
// --------

// fetch("mon-url", "object d'options")
//     .then((response) => {
//     // console.log(response) 
// })
//     .catch((err) => console.log(err));


//fetch('data.txt').then((res) => console.log(res))
// fetch('data.txt')
//     .then((res) => res.text())
//     .then((data) => console.log(data));


//fetch('data.json').then((res) => console.log(res));
// fetch('data.json')
//     .then((res) => res.json())
//     .then((data) => console.log(data));



// 51:25 - Les options de requête

const myHeaders = new Headers();

const init = {
    method: "GET",
    headers: myHeaders,
    mode: "cors",
    cache: "default"
}

//fetch("data.json", init).then((res) => console.log(res));

// CRUD => Create (POST), read (GET), update (PUT), Delete (DELETE)
const init2 = {
    methode: "POST",
    headers: {
        "Content-Type": "application/json",
    },
    body: JSON.stringify({
        pseudo: 'Thomson',
        message: "Yo les gens !"
    }),
    mode: "cors",
    credentials: "same-origin",
};

document.querySelector('form').addEventListener('submit', () => {
    fetch("http://localhost:3000/posts", init2).then(() =>
        console.log('data envoyé')
    );
})


//--------------
// Asynchrone 
//--------------


setTimeout(() => {
    console.log("test")
}, 2000)


// Promise
fetch("mon-lieb").then((res) => res)


// asynch/await 
async function fetchData() {
    await fetch("mon-lien")
    // attend que le await soit exécuté avant de faore la suite 

    executeFonction();
}


const fetchData2 = async () => {
    await fetch("mon-lien")
    // attend que le await soit exécuté avant de faire la suite
}